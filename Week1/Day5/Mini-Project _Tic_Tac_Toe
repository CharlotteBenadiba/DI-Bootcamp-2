board = [
    [' ', ' ', ' '],
    [' ', ' ', ' '],
    [' ', ' ', ' '],
]
marks = ['X', 'O']
play_step = 1


print("Welcome to TIC TAC TOE!")
user_mark = input("Choose your mark: 'X' or 'O': ").upper()

while user_mark not in marks:
    user_mark = input("Invalid choice. Choose 'X' or 'O': ").upper()

if user_mark == marks[0]:
    print("You chose 'X'")
    opponent_mark = marks[1]
else:
    opponent_mark = marks[0]
    print("You chose 'O'")


print("ok, let's start!")



def display_board():
    global board
    print("TIC TAC TOE")
    print('*****************')
    print(f'*   {board[0][0]} | {board[0][1]} | {board[0][2]}   *')
    print('*  ___|___|___  *')
    print(f'*   {board[1][0]} | {board[1][1]} | {board[1][2]}   *')
    print('*  ___|___|___  *')
    print(f'*   {board[2][0]} | {board[2][1]} | {board[2][2]}   *')
    print('*     |   |     *')
    print('*****************')

def player_input():
    global play_step, board,user_mark,opponent_mark
    move = []


    # turn check
    if play_step % 2 != 0:
        current_player = user_mark
    else:
        current_player = opponent_mark


    print(f"Player {current_player}'s turn....")

    while len(move) !=1:
        try:
            row = input('Enter row (1-3): ')
            if row in ['1', '2', '3']:
                move.append(int(row))
        except ValueError:
            print('Error, enter again: ')

    while len(move) !=2:
        try:
            column = input('Enter column (1-3): ')
            if column in ['1', '2', '3']:
                move.append(int(column))
        except ValueError:
            print('Error, enter again: ')

    # Update the board with the player's move
    if board[move[0] - 1][move[1] - 1] == ' ':
        board[move[0] - 1][move[1] - 1] = current_player
        play_step += 1
        #print(play_step) # step cheak
    else:
        print('Cell already taken, enter again: ')
        move.clear()




def check_win():
    #  check for a win
    global board, play_step

    win_combinations = [
        [[0, 0], [0, 1], [0, 2]],
        [[1, 0], [1, 1], [1, 2]],
        [[2, 0], [2, 1], [2, 2]],
        [[0, 0], [1, 1], [2, 2]],
        [[0, 2], [1, 1], [2, 0]],
        [[0, 0], [1, 0], [2, 0]],
        [[0, 1], [1, 1], [2, 1]],
        [[0, 2], [1, 2], [2, 2]],
    ]



    for combo in win_combinations:


        if all(board[row][col] == marks[0] for row, col in combo) or all(
                board[row][col] == marks[1] for row, col in combo
        ):
            print(f"Player {board[combo[0][0]][combo[0][1]]} wins!")
            play_step = 11

    if play_step == 10:
        print("OMG, it's a draw")

def play():
    global play_step
    while play_step < 10:
        display_board()
        player_input()

        check_win()

    display_board()
    print('Game over')

play()

